{
  "error_arn_account_not_allowed": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-arn-account-not-allowed",
    "name": "arn-account-not-allowed",
    "description": "Remove the account ID from the resource ARN. The resource ARNs for some AWS\nservices do not support specifying an account ID.\n\nFor example, Amazon S3 does not support an account ID as a namespace in bucket\nARNs. An Amazon S3 bucket name is globally unique, and the namespace is shared\nby all AWS accounts. To view all of the resource types available in Amazon S3,\nsee [ Resource types defined by Amazon\nS3](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/list_amazons3.html#amazons3-resources-for-iam-\npolicies) in the _Service Authorization Reference_.\n\n**Related terms**"
  },
  "error_arn_region_not_allowed": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-arn-region-not-allowed",
    "name": "arn-region-not-allowed",
    "description": "Remove the Region from the resource ARN. The resource ARNs for some AWS\nservices do not support specifying a Region.\n\nFor example, IAM is a global service. The Region portion of an IAM resource\nARN is always kept blank. IAM resources are global, like an AWS account is\ntoday. For example, after you sign in as an IAM user, you can access AWS\nservices in any geographic region."
  },
  "error_data_type_mismatch": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-data-type-mismatch",
    "name": "data-type-mismatch",
    "description": "Update the text to use the supported data type.\n\nFor example, the `Version` global condition key requires a `String` data type.\nIf you provide a date or an integer, the data type won't match.\n\n**Related terms**"
  },
  "error_duplicate_keys_with_different_case": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-duplicate-keys-with-different-case",
    "name": "duplicate-keys-with-different-case",
    "description": "Review the similar condition keys within the same condition block and use the\nsame capitalization for all instances.\n\nA _condition block_ is the text within the `Condition` element of a policy\nstatement. Condition key _names_ are not case-sensitive. The case-sensitivity\nof condition key _values_ depends on the condition operator that you use. For\nmore information about case-sensitivity in condition keys, see [IAM JSON\npolicy elements: Condition](./reference_policies_elements_condition.html).\n\n**Related terms**"
  },
  "error_invalid_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-action",
    "name": "invalid-action",
    "description": "The action that you specified is not valid. This can happen if you mis-type\nthe service prefix or the action name. For some common issues, the policy\ncheck returns a suggested action.\n\n**Related terms**"
  },
  "error_invalid_arn_account": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-arn-account",
    "name": "invalid-arn-account",
    "description": "Update the account ID in the resource ARN. Account IDs are 12-digit integers.\nTo learn how to view your account ID, see [Finding your AWS account\nID](https://docs.aws.amazon.com/general/latest/gr/acct-\nidentifiers.html#FindingYourAccountIdentifiers).\n\n**Related terms**"
  },
  "error_invalid_arn_prefix": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-arn-prefix",
    "name": "invalid-arn-prefix",
    "description": "AWS resource ARNs must include the required `arn:` prefix.\n\n**Related terms**"
  },
  "error_invalid_arn_region": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-arn-region",
    "name": "invalid-arn-region",
    "description": "The resource type is not supported in the specified Region. For a table of AWS\nservices supported in each Region, see the [Region\ntable](https://aws.amazon.com/about-aws/global-infrastructure/regional-\nproduct-services/).\n\n**Related terms**"
  },
  "error_invalid_arn_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-arn-resource",
    "name": "invalid-arn-resource",
    "description": "The resource ARN must match the specifications for known resource types. To\nview the expected ARN format for a service, see [Actions, resources, and\ncondition keys for AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view its resource types\nand ARN formats.\n\n**Related terms**"
  },
  "error_invalid_arn_service_case": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-arn-service-case",
    "name": "invalid-arn-service-case",
    "description": "The service in the resource ARN must match the specifications (including\ncapitalization) for service prefixes. To view the prefix for a service, see\n[Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service and locate its prefix in the\nfirst sentence.\n\n**Related terms**"
  },
  "error_invalid_condition_data_type": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-condition-data-type",
    "name": "invalid-condition-data-type",
    "description": "The value in the condition key-value pair must match the data type of the\ncondition key and condition operator. To view the condition key data type for\na service, see [Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view the condition keys\nfor that service.\n\nFor example, the [CurrentTime](./reference_policies_condition-\nkeys.html#condition-keys-currenttime) global condition key supports the `Date`\ncondition operator. If you provide a string or an integer for the value in the\ncondition block, the data type won't match.\n\n**Related terms**"
  },
  "error_invalid_condition_key_format": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-condition-key-format",
    "name": "invalid-condition-key-format",
    "description": "The key in the condition key-value pair must match the specifications for the\nservice. To view the condition keys for a service, see [Actions, resources,\nand condition keys for AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view the condition keys\nfor that service.\n\n**Related terms**"
  },
  "error_invalid_condition_multiple_boolean": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-condition-multiple-boolean",
    "name": "invalid-condition-multiple-boolean",
    "description": "The key in the condition key-value pair expects a single Boolean value. When\nyou provide multiple Boolean values, the condition match might not return the\nresults that you expect.\n\nTo view the condition keys for a service, see [Actions, resources, and\ncondition keys for AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view the condition keys\nfor that service."
  },
  "error_invalid_condition_operator": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-condition-operator",
    "name": "invalid-condition-operator",
    "description": "Update the condition to use a supported condition operator.\n\n**Related terms**"
  },
  "error_invalid_effect": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-effect",
    "name": "invalid-effect",
    "description": "Update the `Effect` element to use a valid effect. Valid values for\u00c2 `Effect`\u00c2\nare\u00c2 `Allow`\u00c2 and\u00c2 `Deny`.\n\n**Related terms**"
  },
  "error_invalid_global_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-global-condition-key",
    "name": "invalid-global-condition-key",
    "description": "Update the condition key in the condition key-value pair to use a supported\nglobal condition key.\n\nGlobal condition keys are condition keys with an\u00c2 `aws:`\u00c2 prefix. AWS services\ncan support global condition keys or provide service-specific keys that\ninclude their service prefix. For example, IAM condition keys include the\u00c2\n`iam:`\u00c2 prefix. For more information, see\u00c2 [Actions, Resources, and Condition\nKeys for AWS Services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html)\u00c2 and choose the service whose keys you want to view.\n\n**Related terms**"
  },
  "error_invalid_partition": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-partition",
    "name": "invalid-partition",
    "description": "Update the resource ARN to include a supported partition. If you included a\nsupported partition, then the service or resource might not support the\npartition that you included.\n\nA _partition_ is a group of AWS Regions. Each AWS account is scoped to one\npartition. In Classic Regions, use the `aws` partition. In China Regions, use\n`aws-cn`.\n\n**Related terms**"
  },
  "error_invalid_policy_element": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-policy-element",
    "name": "invalid-policy-element",
    "description": "Update the policy to include only supported JSON policy elements.\n\n**Related terms**"
  },
  "error_invalid_principal_format": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-principal-format",
    "name": "invalid-principal-format",
    "description": "Update the principal to use a supported key-value pair format.\n\nYou can specify a principal in a resource-based policy, but not an identity-\nbased policy.\n\nFor example, to define access for everyone in an AWS account, use the\nfollowing principal in your policy:\n\n    \n    \n    \"Principal\": { \"AWS\": \"123456789012\" }\n\n**Related terms**"
  },
  "error_invalid_principal_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-principal-key",
    "name": "invalid-principal-key",
    "description": "Update the key in the principal key-value pair to use a supported principal\nkey. The following are supported principal keys:"
  },
  "error_invalid_region": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-region",
    "name": "invalid-region",
    "description": "Update the value of the condition key-value pair to include a supported\nRegion. For a table of AWS services supported in each Region, see the [Region\ntable](https://aws.amazon.com/about-aws/global-infrastructure/regional-\nproduct-services/).\n\n**Related terms**"
  },
  "error_invalid_service": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-service",
    "name": "invalid-service",
    "description": "The service prefix in the action or condition key must match the\nspecifications (including capitalization) for service prefixes. To view the\nprefix for a service, see [ Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service and locate its prefix in the\nfirst sentence.\n\n**Related terms**"
  },
  "error_invalid_service_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-service-condition-key",
    "name": "invalid-service-condition-key",
    "description": "Update the key in the condition key-value pair to use a known condition key\nfor the service. Global condition key names begin with the `aws` prefix. AWS\nservices can provide service-specific keys that include their service prefix.\nTo view the prefix for a service, see [ Actions, resources, and condition keys\nfor AWS services](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html).\n\n**Related terms**"
  },
  "error_invalid_service_in_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-service-in-action",
    "name": "invalid-service-in-action",
    "description": "The service prefix in the action must match the specifications (including\ncapitalization) for service prefixes. To view the prefix for a service, see [\nActions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service and locate its prefix in the\nfirst sentence.\n\n**Related terms**"
  },
  "error_invalid_service_principal_format": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-service-principal-format",
    "name": "invalid-service-principal-format",
    "description": "The value in the condition key-value pair must match a defined service\nprincipal format.\n\nA _service principal_ is an identifier that is used to grant permissions to a\nservice. You can specify a service principal in the value for some global\ncondition keys and service-specific keys. The service principal is defined by\neach service.\n\nThe identifier for a service principal includes the service name, and is\nusually in the following format:\n\n``service-name`.amazonaws.com`\n\nSome service-specific keys may use a different format for service principals.\nFor example, the `kms:ViaService` condition key requires the following format\nfor service principals:\n\n``service-name.AWS_region`.amazonaws.com`\n\n**Related terms**"
  },
  "error_invalid_variable_for_operator": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-variable-for-operator",
    "name": "invalid-variable-for-operator",
    "description": "You can use policy variables in the\u00c2 `Resource`\u00c2 element and in string\ncomparisons in the\u00c2 `Condition`\u00c2 element. Conditions support variables when\nyou use string operators or ARN operators. String operators include\n`StringEquals`,\u00c2 `StringLike`, and\u00c2 `StringNotLike`. ARN operators include\u00c2\n`ArnEquals`\u00c2 and\u00c2 `ArnLike`. You can't use a policy variable with other\noperators, such as\u00c2 Numeric,\u00c2 Date,\u00c2 Boolean,\u00c2 Binary,\u00c2 IP Address, or\u00c2 Null\u00c2\noperators.\n\n**Related terms**"
  },
  "error_invalid_version": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-invalid-version",
    "name": "invalid-version",
    "description": "The\u00c2 `Version`\u00c2 policy element specifies the language syntax rules that AWS\nuses to process a policy. To use all of the available policy features, include\nthe latest\u00c2 `Version`\u00c2 element before the\u00c2 `Statement`\u00c2 element in all of your\npolicies.\n\n    \n    \n    \"Version\": \"2012-10-17\"\n\n**Related terms**"
  },
  "error_json_syntax_error": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-json-syntax-error",
    "name": "json-syntax-error",
    "description": "Your policy includes a syntax error. Check your JSON syntax.\n\n**Related terms**"
  },
  "error_missing_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-action",
    "name": "missing-action",
    "description": "AWS JSON policies must include an `Action` or `NotAction` element.\n\n**Related terms**"
  },
  "error_missing_arn_field": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-arn-field",
    "name": "missing-arn-field",
    "description": "All of the fields in the resource ARN must match the specifications for a\nknown resource type. To view the expected ARN format for a service, see\n[Actions, resources, and condition keys for AWS\nservices](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html). Choose the name of the service to view its resource types\nand ARN formats.\n\n**Related terms**"
  },
  "error_missing_arn_region": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-arn-region",
    "name": "missing-arn-region",
    "description": "The resource ARNs for most AWS services require that you specify a Region. For\na table of AWS services supported in each Region, see the [Region\ntable](https://aws.amazon.com/about-aws/global-infrastructure/regional-\nproduct-services/).\n\n**Related terms**"
  },
  "error_missing_effect": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-effect",
    "name": "missing-effect",
    "description": "AWS JSON policies must include an `Effect` element with a value of\u00c2 `Allow`\u00c2\nand\u00c2 `Deny`.\n\n**Related terms**"
  },
  "error_missing_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-principal",
    "name": "missing-principal",
    "description": "Resource-based policies must include a `Principal` element.\n\nFor example, to define access for everyone in an AWS account, use the\nfollowing principal in your policy:\n\n    \n    \n    \"Principal\": { \"AWS\": \"123456789012\" }\n\n**Related terms**"
  },
  "error_missing_qualifier": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-qualifier",
    "name": "missing-qualifier",
    "description": "In the\u00c2 `Condition`\u00c2 element, you build expressions in which you use\u00c2\ncondition operators like equal or less than to compare a condition in the\npolicy against keys and values in the request context. For requests that\ninclude multiple values for a single condition key, you must enclose the\nconditions within brackets like an array (\"Key2\":[\"Value2A\", \"Value2B\"]). You\nmust also use the\u00c2 `ForAllValues`\u00c2 or\u00c2 `ForAnyValue`\u00c2 set operators with the\u00c2\n`StringLike`\u00c2 condition operator. These qualifiers add set-operation\nfunctionality to the condition operator so that you can test multiple request\nvalues against multiple condition values.\n\n**Related terms**"
  },
  "error_missing_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-resource",
    "name": "missing-resource",
    "description": "Identity-based policies must include a `Resource` or `NotResource` element.\n\n**Related terms**"
  },
  "error_missing_statement": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-statement",
    "name": "missing-statement",
    "description": "A JSON policy must include a statement.\n\n**Related terms**"
  },
  "error_missing_tag_key_in_condition": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-tag-key-in-condition",
    "name": "missing-tag-key-in-condition",
    "description": "To control access based on tags, you provide tag information in the [condition\nelement](./reference_policies_elements_condition.html) of a policy.\n\nFor example, to [control access to AWS\nresources](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html#access_tags_control-\nresources), you include the `aws:ResourceTag` condition key. This key requires\nthe format `aws:ResourceTag/`tag-key``. To specify the tag key `owner` and the\ntag value `JaneDoe` in a condition, use the following format.\n\n    \n    \n    \"Condition\": {\n        \"StringEquals\": {\"aws:ResourceTag/owner\": \"JaneDoe\"}\n    }\n\n**Related terms**"
  },
  "error_null_with_if_exists": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-null-with-if-exists",
    "name": "null-with-if-exists",
    "description": "You can add\u00c2 `IfExists`\u00c2 to the end of any condition operator name except the\u00c2\n`Null`\u00c2 condition operator. Use a\u00c2 `Null`\u00c2 condition operator to check if a\ncondition key is present at the time of authorization. Use `...ifExists` to\nsay \"If the policy key is present in the context of the request, process the\nkey as specified in the policy. If the key is not present, evaluate the\ncondition element as true.\"\n\n**Related terms**"
  },
  "error_scp_syntax_error_action_wildcard": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-action-wildcard",
    "name": "action-wildcard",
    "description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Action` or `NotAction` elements. However, these values can include\nwildcards (*) only at the end of the string. This means that you can specify\n`iam:Get*` but not `iam:*role`.\n\nTo specify multiple actions, AWS recommends that you list them individually.\n\n**Related terms**"
  },
  "error_scp_syntax_error_allow_condition": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-allow-condition",
    "name": "allow-condition",
    "description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Condition` element only when you use `\"Effect\": \"Deny\"`.\n\nTo allow only a single action, you can deny access to everything except the\ncondition that you specify using the `...NotEquals` version of a condition\noperator. This negates the comparison made by the operator.\n\n**Related terms**"
  },
  "error_scp_syntax_error_allow_notaction": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-allow-notaction",
    "name": "allow-notaction",
    "description": "AWS Organizations service control policies (SCPs) do not support using the\n`NotAction` element with `\"Effect\": \"Allow\"`.\n\nYou must rewrite the logic to allow a list of actions, or to deny every action\nthat is not listed.\n\n**Related terms**"
  },
  "error_scp_syntax_error_allow_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-allow-resource",
    "name": "allow-resource",
    "description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Resource` element only when you use `\"Effect\": \"Deny\"`.\n\nYou must rewrite the logic to allow all resources, or to deny every resource\nthat is listed.\n\n**Related terms**"
  },
  "error_scp_syntax_error_notresource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-notresource",
    "name": "notresource",
    "description": "AWS Organizations service control policies (SCPs) do not support the\n`NotResource` element.\n\nYou must rewrite the logic to allow all resources, or to deny every resource\nthat is listed.\n\n**Related terms**"
  },
  "error_scp_syntax_error_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-scp-syntax-error-principal",
    "name": "principal",
    "description": "AWS Organizations service control policies (SCPs) do not support the\n`Principal` or `NotPrincipal` elements.\n\nYou can specify the Amazon Resource Name (ARN) using the `aws:PrincipalArn`\nglobal condition key in the `Condition` element.\n\n**Related terms**"
  },
  "error_unique_sids_required": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unique-sids-required",
    "name": "unique-sids-required",
    "description": "For some policy types, statement IDs must be unique. The `Sid` (statement ID)\nelement allows you to enter an optional identifier that you provide for the\npolicy statement. You can assign a statement ID value to each statement in a\nstatement array using the `SID` element. In services that let you specify an\nID element, such as SQS and SNS, the `Sid` value is just a sub-ID of the\npolicy document's ID. For example, in IAM, the `Sid` value must be unique\nwithin a JSON policy.\n\n**Related terms**"
  },
  "error_unsupported_element_combination": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-element-combination",
    "name": "unsupported-element-combination",
    "description": "Some combinations of JSON policy elements can't be used together. For example,\nyou cannot use both `Action` and `NotAction` in the same policy statement.\nOther pairs that are mutually exclusive include `Principal/NotPrincipal` and\n`Resource/NotResource`.\n\n**Related terms**"
  },
  "error_unsupported_global_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-global-condition-key",
    "name": "unsupported-global-condition-key",
    "description": "AWS does not support using the specified global condition key. Depending on\nyour use case, you can use the `aws:PrincipalArn` or `aws:SourceArn` global\ncondition keys. For example, instead of `aws:ARN`, use the `aws:PrincipalArn`\nto compare the Amazon Resource Name (ARN) of the principal that made the\nrequest with the ARN that you specify in the policy. Alternatively, use the\n`aws:SourceArn` global condition key to compare the Amazon Resource Name (ARN)\nof the resource making a service-to-service request with the ARN that you\nspecify in the policy.\n\n**Related terms**"
  },
  "error_unsupported_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-principal",
    "name": "unsupported-principal",
    "description": "The `Principal` element specifies the principal that is allowed or denied\naccess to a resource. You cannot use the `Principal` element in an IAM\nidentity-based policy. You can use it in the trust policies for IAM roles and\nin resource-based policies. Resource-based policies are policies that you\nembed directly in a resource. For example, you can embed policies in an Amazon\nS3 bucket or an AWS KMS key.\n\n**Related terms**"
  },
  "error_unsupported_sid": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-sid",
    "name": "unsupported-sid",
    "description": "The `Sid` element supports uppercase letters, lowercase letters, and numbers.\n\n**Related terms**"
  },
  "error_unsupported_wildcard_in_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-wildcard-in-principal",
    "name": "unsupported-wildcard-in-principal",
    "description": "The `Principal` element structure supports using a key-value pair. The\nprincipal value specified in the policy includes a wildcard (*). You can't\ninclude a wildcard with the principal key that you specified. For example,\nwhen you specify users in a `Principal` element, you cannot use a wildcard to\nmean \"all users\". You must name a specific user or users. Similarly, when you\nspecify an assumed-role session, you cannot use a wildcard to mean \"all\nsessions\". You must name a specific session. You also cannot use a wildcard to\nmatch part of a name or an ARN.\n\nTo resolve this finding, remove the wildcard and provide a more specific\nprincipal.\n\n**Related terms**"
  },
  "error_missing_brace_in_variable": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-brace-in-variable",
    "name": "missing-brace-in-variable",
    "description": "Policy variable structure supports using a `$` prefix followed by a pair of\ncurly braces (`{ }`). Inside the `${ }` characters, include the name of the\nvalue from the request that you want to use in the policy.\n\nTo resolve this finding, add the missing brace to make sure the full opening\nand closing set of braces is present.\n\n**Related terms**"
  },
  "error_unsupported_symbol_in_variable": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-symbol-in-variable",
    "name": "unsupported-symbol-in-variable",
    "description": "Policy variable structure supports using a `$` prefix followed by a pair of\ncurly braces (`{ }`). Inside the `${ }` characters, include the name of the\nvalue from the request that you want to use in the policy.\n\nTo resolve this finding, remove the unsupported symbol.\n\n**Related terms**"
  },
  "error_missing_quote_in_variable": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-missing-quote-in-variable",
    "name": "missing-quote-in-variable",
    "description": "When you add a variable to your policy, you can specify a default value for\nthe variable. For example, anonymous users won't populate the `${aws:userid}`\nvariable. You can set the default to \"anonymous\" for those users. To add a\ndefault to a variable, surround the default value with single quotes (`' '`),\nand separate the variable text and the default value with a comma and space\n(`, `).\n\n    \n    \n    Condition: StringEquals: \"aws:Resource\": \"arn:aws:s3:::/bucket/${aws:userid, 'anonymous'}\"\n    \n\n**Related terms**"
  },
  "error_unsupported_space_in_variable": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-unsupported-space-in-variable",
    "name": "unsupported-space-in-variable",
    "description": "Policy variable structure supports using a `$` prefix followed by a pair of\ncurly braces (`{ }`). Inside the `${ }` characters, include the name of the\nvalue from the request that you want to use in the policy. Although you can\ninclude a space when you specify a default variable, you cannot include a\nspace in the variable name.\n\n**Related terms**"
  },
  "error_empty_variable": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-empty-variable",
    "name": "empty-variable",
    "description": "Policy variable structure supports using a `$` prefix followed by a pair of\ncurly braces (`{ }`). Inside the `${ }` characters, include the name of the\nvalue from the request that you want to use in the policy.\n\n**Related terms**"
  },
  "error_variable_unsupported_in_element": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-variable-unsupported-in-element",
    "name": "variable-unsupported-in-element",
    "description": "You can use policy variables in the `Resource` element and in string\ncomparisons in the `Condition` element.\n\n**Related terms**"
  },
  "error_variable_unsupported_in_version": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-variable-unsupported-in-version",
    "name": "variable-unsupported-in-version",
    "description": "To use policy variables, you must include the `Version` element and set it to\na version that supports policy variables. Variables were introduced in version\n`2012-10-17`. Earlier versions of the policy language don't support policy\nvariables. If you don't set the `Version` to `2012-10-17` or later, variables\nlike `${aws:username}` are treated as literal strings in the policy.\n\nA `Version` policy element is different from a policy version. The `Version`\npolicy element is used within a policy and defines the version of the policy\nlanguage. A policy version, is created when you change a customer managed\npolicy in IAM. The changed policy doesn't overwrite the existing policy.\nInstead, IAM creates a new version of the managed policy.\n\n**Related terms**"
  },
  "error_private_ip_address": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-private-ip-address",
    "name": "private-ip-address",
    "description": "The global condition key `aws:SourceIp` works only for public IP address\nranges. You receive this error when your policy allows only private IP\naddresses. In this case, the condition would never match."
  },
  "error_private_not_ip_address": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-private-not-ip-address",
    "name": "private-not-ip-address",
    "description": "The global condition key `aws:SourceIp` works only for public IP address\nranges. You receive this error when you use the `NotIpAddress` condition\noperator and list only private IP addresses. In this case, the condition would\nalways match and would be ineffective."
  },
  "error_policy_size_exceeds_scp_quota": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-error-policy-size-exceeds-scp-quota",
    "name": "policy-size-exceeds-scp-quota",
    "description": "AWS Organizations service control policies (SCPs) support specifying values in\nthe `Action` or `NotAction` elements. However, these values can include\nwildcards (*) only at the end of the string. This means that you can specify\n`iam:Get*` but not `iam:*role`.\n\nTo specify multiple actions, AWS recommends that you list them individually.\n\n**Related terms**"
  },
  "general_warning_create_slr_with_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-not-resource",
    "name": "create-slr-with-not-resource",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using\n`iam:CreateServiceLinkedRole` in a policy with the `NotResource` element can\nallow creating unintended service-linked roles for multiple resources. AWS\nrecommends that you specify allowed ARNs in the `Resource` element instead."
  },
  "general_warning_create_slr_with_star_in_action_and_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-star-in-action-and-not-resource",
    "name": "create-slr-with-star-in-action-and-not-resource",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Policies\nwith a wildcard (*) in the `Action` and that include the `NotResource` element\ncan allow creation of unintended service-linked roles for multiple resources.\nAWS recommends that you specify allowed ARNs in the `Resource` element\ninstead."
  },
  "general_warning_create_slr_with_not_action_and_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-not-action-and-not-resource",
    "name": "create-slr-with-not-action-and-not-resource",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using the\n`NotAction` element with the `NotResource` element can allow creating\nunintended service-linked roles for multiple resources. AWS recommends that\nyou rewrite the policy to allow `iam:CreateServiceLinkedRole` on a limited\nlist of ARNs in the `Resource` element instead. You can also add\n`iam:CreateServiceLinkedRole` to the `NotAction` element."
  },
  "general_warning_create_slr_with_star_in_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-star-in-resource",
    "name": "create-slr-with-star-in-resource",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using\n`iam:CreateServiceLinkedRole` in a policy with a wildcard (*) in the\n`Resource` element can allow creating unintended service-linked roles for\nmultiple resources. AWS recommends that you specify allowed ARNs in the\n`Resource` element instead."
  },
  "general_warning_create_slr_with_star_in_action_and_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-star-in-action-and-resource",
    "name": "create-slr-with-star-in-action-and-resource",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Policies\nwith a wildcard (*) in the `Action` and `Resource` elements can allow creating\nunintended service-linked roles for multiple resources. This allows creating a\nservice-linked role when you specify `\"Action\": \"*\"`, `\"Action\": \"iam:*\"`, or\n`\"Action\": \"iam:Create*\"`. AWS recommends that you specify allowed ARNs in the\n`Resource` element instead."
  },
  "general_warning_create_slr_with_star_in_resource_and_not_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-create-slr-with-star-in-resource-and-not-action",
    "name": "create-slr-with-star-in-resource-and-not-action",
    "description": "The action `iam:CreateServiceLinkedRole` grants permission to create an IAM\nrole that allows an AWS service to perform actions on your behalf. Using the\n`NotAction` element in a policy with a wildcard (*) in the `Resource` element\ncan allow creating unintended service-linked roles for multiple resources. AWS\nrecommends that you specify allowed ARNs in the `Resource` element instead.\nYou can also add `iam:CreateServiceLinkedRole` to the `NotAction` element."
  },
  "general_warning_deprecated_global_condition_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-deprecated-global-condition-key",
    "name": "deprecated-global-condition-key",
    "description": "The policy includes a deprecated global condition key. Update the condition\nkey in the condition key-value pair to use a supported global condition key."
  },
  "general_warning_invalid_date_value": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-invalid-date-value",
    "name": "invalid-date-value",
    "description": "Unix Epoch time describes a point in time that has elapsed since January 1,\n1970, minus leap seconds. Epoch time might not resolve to the precise time\nthat you expect. AWS recommends that you use the W3C standard for date and\ntime formats. For example, you could specify a complete date, such as YYYY-MM-\nDD (1997-07-16), or you could also append the time to the second, such as\nYYYY-MM-DDThh:mm:ssTZD (1997-07-16T19:20:30+01:00)."
  },
  "general_warning_invalid_role_reference": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-invalid-role-reference",
    "name": "invalid-role-reference",
    "description": "AWS recommends that you specify the Amazon Resource Name (ARN) for an IAM role\ninstead of its principal ID. When IAM saves the policy, it will transform the\nARN into the principal ID for the existing role. AWS includes a safety\nprecaution. If someone deletes and recreates the role, it will have a new ID,\nand the policy won't match the new role's ID."
  },
  "general_warning_invalid_user_reference": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-invalid-user-reference",
    "name": "invalid-user-reference",
    "description": "AWS recommends that you specify the Amazon Resource Name (ARN) for an IAM user\ninstead of its principal ID. When IAM saves the policy, it will transform the\nARN into the principal ID for the existing user. AWS includes a safety\nprecaution. If someone deletes and recreates the user, it will have a new ID,\nand the policy won't match the new user's ID."
  },
  "general_warning_missing_version": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-missing-version",
    "name": "missing-version",
    "description": "AWS recommends that you include the optional `Version` parameter in your\npolicy. If you do not include a Version element, the value defaults to\n`2012-10-17`, but newer features, such as policy variables, will not work with\nyour policy. For example, variables such as `${aws:username}` aren't\nrecognized as variables and are instead treated as literal strings in the\npolicy."
  },
  "general_warning_unique_sids_recommended": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-unique-sids-recommended",
    "name": "unique-sids-recommended",
    "description": "AWS recommends that you use unique statement IDs. The `Sid` (statement ID)\nelement allows you to enter an optional identifier that you provide for the\npolicy statement. You can assign a statement ID value to each statement in a\nstatement array using the `SID` element.\n\n**Related terms**"
  },
  "general_warning_wildcard_without_like_operator": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-wildcard-without-like-operator",
    "name": "wildcard-without-like-operator",
    "description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair. When you specify a condition value that uses a wildcard\n(*, ?), you must use the `Like` version of the condition operator. For\nexample, instead of the `StringEquals` string condition operator, use\n`StringLike`.\n\n    \n    \n    \"Condition\": {\"StringLike\": {\"aws:PrincipalTag/job-category\": \"admin-*\"}}"
  },
  "general_warning_policy_size_exceeds_identity_policy_quota": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-policy-size-exceeds-identity-policy-quota",
    "name": "policy-size-exceeds-identity-policy-quota",
    "description": "You can attach up to 10 managed policies to an IAM identity (user, group of\nusers, or role). However, the size of each managed policy cannot exceed the\ndefault quota of 6,144 characters. IAM does not count white space when\ncalculating the size of a policy against this quota. Quotas, also referred to\nas limits in AWS, are the maximum values for the resources, actions, and items\nin your AWS account.\n\nAdditionally, you can add as many inline policies as you want to an IAM\nidentity. However, the sum size of all inline policies per identity cannot\nexceed the specified quota.\n\nIf your policy is larger than the quota, you can organize your policy into\nmultiple statements and group the statements into multiple policies.\n\n**Related terms**"
  },
  "general_warning_type_mismatch": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch",
    "name": "type-mismatch",
    "description": "Update the text to use the supported condition operator data type.\n\nFor example, the `aws:MultiFactorAuthPresent` global condition key requires a\ncondition operator with the `Boolean` data type. If you provide a date or an\ninteger, the data type won't match.\n\n**Related terms**"
  },
  "general_warning_type_mismatch_boolean": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch-boolean",
    "name": "type-mismatch-boolean",
    "description": "Update the text to use a Boolean condition operator data type, such as `true`\nor `false`.\n\nFor example, the `aws:MultiFactorAuthPresent` global condition key requires a\ncondition operator with the `Boolean` data type. If you provide a date or an\ninteger, the data type won't match.\n\n**Related terms**"
  },
  "general_warning_type_mismatch_date": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch-date",
    "name": "type-mismatch-date",
    "description": "Update the text to use the date condition operator data type, in a `YYYY-MM-\nDD` or other ISO 8601 date time format.\n\n**Related terms**"
  },
  "general_warning_type_mismatch_ip_range": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch-ip-range",
    "name": "type-mismatch-ip-range",
    "description": "Update the text to use the IP address condition operator data type, in a CIDR\nformat.\n\n**Related terms**"
  },
  "general_warning_type_mismatch_number": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch-number",
    "name": "type-mismatch-number",
    "description": "Update the text to use the numeric condition operator data type.\n\n**Related terms**"
  },
  "general_warning_type_mismatch_string": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-general-warning-type-mismatch-string",
    "name": "type-mismatch-string",
    "description": "Update the text to use the string condition operator data type.\n\n**Related terms**"
  },
  "security_warning_allow_with_not_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-allow-with-not-principal",
    "name": "allow-with-not-principal",
    "description": "Using `\"Effect\": \"Allow\"` with the `NotPrincipal` can be overly permissive.\nFor example, this can grant permissions to anonymous principals. AWS\nrecommends that you specify principals that need access using the `Principal`\nelement. Alternatively, you can allow broad access and then add another\nstatement that uses the `NotPrincipal` element with `\u00e2\u0080\u009cEffect\u00e2\u0080\u009d:\n\u00e2\u0080\u009cDeny\u00e2\u0080\u009d`."
  },
  "security_warning_deny_notaction_with_unsupported_tag_condition_key_for_service": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-deny-notaction-with-unsupported-tag-condition-key-for-service",
    "name": "deny-notaction-with-unsupported-tag-condition-key-for-service",
    "description": "Using tag condition keys in the `Condition` element of a policy with the\nelement `NotAction` and `\"Effect\": \"Deny\"` can be overly permissive. The\ncondition is ignored for service actions that don\u00e2\u0080\u0099t support the condition\nkey. AWS recommends that you rewrite the logic to deny a list of actions.\n\nIf you use the `aws:ResourceTag` condition key with `NotAction`, any new or\nexisting service actions that don\u00e2\u0080\u0099t support the key are not denied. AWS\nrecommends that you explicitly list the actions that you want to deny. IAM\nAccess Analyzer returns a separate finding for listed actions that don\u00e2\u0080\u0099t\nsupport the `aws:ResourceTag` condition key. For more information, see\nSecurity Warning \u00e2\u0080\u0093 Deny with unsupported tag condition key for service.\n\nWhen a service supports the `aws:ResourceTag` condition key, you can use tags\nto control access to that service\u00e2\u0080\u0099s resources. This is known as [attribute-\nbased access control (ABAC)](./introduction_attribute-based-access-\ncontrol.html). Services that don\u00e2\u0080\u0099t support these keys require you to control\naccess to resources using [resource-based access control\n(RBAC)](./introduction_attribute-based-access-\ncontrol.html#introduction_attribute-based-access-control_compare-rbac).\n\n**Related terms**"
  },
  "security_warning_deny_with_unsupported_tag_condition_key_for_service": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-deny-with-unsupported-tag-condition-key-for-service",
    "name": "deny-with-unsupported-tag-condition-key-for-service",
    "description": "Using unsupported tag condition keys in the `Condition` element of a policy\nwith `\"Effect\": \"Deny\"` can be overly permissive, because the condition is\nignored for that service. AWS recommends that you remove the service actions\nthat don\u00e2\u0080\u0099t support the condition key and create another statement to deny\naccess to specific resources for those actions.\n\nIf you use the `aws:ResourceTag` condition key and it\u00e2\u0080\u0099s not supported by a\nservice action, then the key is not included in the request context. In this\ncase, the condition in the `Deny` statement always returns `false` and the\naction is never denied. This happens even if the resource is tagged correctly.\n\nWhen a service supports the `aws:ResourceTag` condition key, you can use tags\nto control access to that service\u00e2\u0080\u0099s resources. This is known as [attribute-\nbased access control (ABAC)](./introduction_attribute-based-access-\ncontrol.html). Services that don\u00e2\u0080\u0099t support these keys require you to control\naccess to resources using [resource-based access control\n(RBAC)](./introduction_attribute-based-access-\ncontrol.html#introduction_attribute-based-access-control_compare-rbac)."
  },
  "security_warning_forallvalues_with_single_valued_key": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-forallvalues-with-single-valued-key",
    "name": "forallvalues-with-single-valued-key",
    "description": "AWS recommends that you use the `ForAllValues` only with multivalued\nconditions. The `ForAllValues` set operator tests whether the value of every\nmember of the request set is a subset of the condition key set. The condition\nreturns true if every key value in the request matches at least one value in\nthe policy. It also returns true if there are no keys in the request, or if\nthe key values resolve to a null data set, such as an empty string.\n\nTo learn whether a condition supports a single value or multiple values,\nreview the [Actions, resources, and condition\nkeys](https://docs.aws.amazon.com/service-\nauthorization/latest/reference/reference_policies_actions-resources-\ncontextkeys.html) page for the service. Condition keys with the `ArrayOf` data\ntype prefix are multivalued condition keys. For example, Amazon SES supports\nkeys with single values (`String`) and the `ArrayOfString` multivalued data\ntype."
  },
  "security_warning_missing_paired_condition_keys": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-missing-paired-condition-keys",
    "name": "missing-paired-condition-keys",
    "description": "Some condition keys are more secure when paired with other related condition\nkeys. AWS recommends that you include the related condition keys in the same\ncondition block as the existing condition key. This makes the permissions\ngranted through the policy more secure.\n\nFor example, you can use the `aws:VpcSourceIp` condition key to compare the IP\naddress from which a request was made with the IP address that you specify in\nthe policy. AWS recommends that you add the related `aws:SourceVPC` condition\nkey. This checks whether the request comes from the VPC that you specify in\nthe policy _and_ the IP address that you specify.\n\n**Related terms**"
  },
  "security_warning_pass_role_with_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-not-resource",
    "name": "pass-role-with-not-resource",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Using `iam:PassRole` in a policy with the\n`NotResource` element can allow your principals to access more services or\nfeatures than you intended. AWS recommends that you specify allowed ARNs in\nthe `Resource` element instead. Additionally, you can reduce permissions to a\nsingle service by using the `iam:PassedToService` condition key."
  },
  "security_warning_pass_role_with_star_in_action_and_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-star-in-action-and-not-resource",
    "name": "pass-role-with-star-in-action-and-not-resource",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Policies with a wildcard (*) in the `Action` and\nthat include the `NotResource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey."
  },
  "security_warning_pass_role_with_not_action_and_not_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-not-action-and-not-resource",
    "name": "pass-role-with-not-action-and-not-resource",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Using the `NotAction` element and listing some\nresources in the `NotResource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey."
  },
  "security_warning_pass_role_with_star_in_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-star-in-resource",
    "name": "pass-role-with-star-in-resource",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Policies that allow `iam:PassRole` and that include\na wildcard (*) in the `Resource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey.\n\nSome AWS services include their service namespace in the name of their role.\nThis policy check takes these conventions into account while analyzing the\npolicy to generate findings. For example, the following resource ARN might not\ngenerate a finding:\n\n    \n    \n    arn:aws:iam::*:role/Service*"
  },
  "security_warning_pass_role_with_star_in_action_and_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-star-in-action-and-resource",
    "name": "pass-role-with-star-in-action-and-resource",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Policies with a wildcard (*) in the `Action` and\n`Resource` elements can allow your principals to access more services or\nfeatures than you intended. AWS recommends that you specify allowed ARNs in\nthe `Resource` element instead. Additionally, you can reduce permissions to a\nsingle service by using the `iam:PassedToService` condition key."
  },
  "security_warning_pass_role_with_star_in_resource_and_not_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-star-in-resource-and-not-action",
    "name": "pass-role-with-star-in-resource-and-not-action",
    "description": "To configure many AWS services, you must pass an IAM role to the service. To\nallow this you must grant the `iam:PassRole` permission to an identity (user,\ngroup of users, or role). Using the `NotAction` element in a policy with a\nwildcard (*) in the `Resource` element can allow your principals to access\nmore services or features than you intended. AWS recommends that you specify\nallowed ARNs in the `Resource` element instead. Additionally, you can reduce\npermissions to a single service by using the `iam:PassedToService` condition\nkey."
  },
  "suggestion_allow_notaction_with_unsupported_tag_condition_key_for_service": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-allow-notaction-with-unsupported-tag-condition-key-for-service",
    "name": "allow-notaction-with-unsupported-tag-condition-key-for-service",
    "description": "Using unsupported tag condition keys in the `Condition` element of a policy\nwith the element `NotAction` and `\"Effect\": \"Allow\"` does not affect the\npermissions granted by the policy. The condition is ignored for service\nactions that don\u00e2\u0080\u0099t support the condition key. AWS recommends that you\nrewrite the logic to allow a list of actions.\n\nIf you use the `aws:ResourceTag` condition key with `NotAction`, any new or\nexisting service actions that don\u00e2\u0080\u0099t support the key are not allowed. AWS\nrecommends that you explicitly list the actions that you want to allow. IAM\nAccess Analyzer returns a separate finding for listed actions that don\u00e2\u0080\u0099t\nsupport the `aws:ResourceTag` condition key. For more information, see\nSuggestion \u00e2\u0080\u0093 Allow with unsupported tag condition key for service.\n\nWhen a service supports the `aws:ResourceTag` condition key, you can use tags\nto control access to that service\u00e2\u0080\u0099s resources. This is known as [attribute-\nbased access control (ABAC)](./introduction_attribute-based-access-\ncontrol.html). Services that don\u00e2\u0080\u0099t support these keys require you to control\naccess to resources using [resource-based access control\n(RBAC)](./introduction_attribute-based-access-\ncontrol.html#introduction_attribute-based-access-control_compare-rbac).\n\n**Related terms**"
  },
  "suggestion_allow_with_unsupported_tag_condition_key_for_service": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-allow-with-unsupported-tag-condition-key-for-service",
    "name": "allow-with-unsupported-tag-condition-key-for-service",
    "description": "Using unsupported tag condition keys in the `Condition` element of a policy\nwith `\"Effect\": \"Allow\"` does not affect the permissions granted by the\npolicy, because the condition is ignored for that service action. AWS\nrecommends that you remove the actions for services that don\u00e2\u0080\u0099t support the\ncondition key and create another statement to allow access to specific\nresources in that service.\n\nIf you use the `aws:ResourceTag` condition key and it\u00e2\u0080\u0099s not supported by a\nservice action, then the key is not included in the request context. In this\ncase, the condition in the `Allow` statement always returns `false` and the\naction is never allowed. This happens even if the resource is tagged\ncorrectly.\n\nWhen a service supports the `aws:ResourceTag` condition key, you can use tags\nto control access to that service\u00e2\u0080\u0099s resources. This is known as [attribute-\nbased access control (ABAC)](./introduction_attribute-based-access-\ncontrol.html). Services that don\u00e2\u0080\u0099t support these keys require you to control\naccess to resources using [resource-based access control\n(RBAC)](./introduction_attribute-based-access-\ncontrol.html#introduction_attribute-based-access-control_compare-rbac)."
  },
  "suggestion_empty_array_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-action",
    "name": "empty-array-action",
    "description": "Statements must include either an `Action` or `NotAction` element that\nincludes a set of actions. When the element is empty, the policy statement\nprovides no permissions. Specify actions in the `Action` element."
  },
  "suggestion_empty_array_condition": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-condition",
    "name": "empty-array-condition",
    "description": "The optional `Condition` element structure requires that you use a condition\noperator and a key-value pair. When the condition value is empty, the\ncondition returns `true` and the policy statement provides no permissions.\nSpecify a condition value."
  },
  "suggestion_empty_array_condition_forallvalues": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-condition-forallvalues",
    "name": "empty-array-condition-forallvalues",
    "description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair. The `ForAllValues` set operator tests whether the value\nof every member of the request set is a subset of the condition key set.\n\nWhen you use `ForAllValues` with an empty condition key, the condition matches\nonly if there are no keys in the request. AWS recommends that if you want to\ntest whether a request context is empty, use the `Null` condition operator\ninstead."
  },
  "suggestion_empty_array_condition_foranyvalue": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-condition-foranyvalue",
    "name": "empty-array-condition-foranyvalue",
    "description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair. The `ForAnyValues` set operator tests whether at least\none member of the set of request values matches at least one member of the set\nof condition key values.\n\nWhen you use `ForAnyValues` with an empty condition key, the condition never\nmatches. This means that the statement has no effect on the policy. AWS\nrecommends that you rewrite the condition."
  },
  "suggestion_empty_array_condition_ifexists": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-condition-ifexists",
    "name": "empty-array-condition-ifexists",
    "description": "The `...IfExists` suffix edits a condition operator. It means that if the\npolicy key is present in the context of the request, process the key as\nspecified in the policy. If the key is not present, evaluate the condition\nelement as true.\n\nWhen you use `...IfExists` with an empty condition key, the condition matches\nonly if there are no keys in the request. AWS recommends that if you want to\ntest whether a request context is empty, use the `Null` condition operator\ninstead."
  },
  "suggestion_empty_array_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-principal",
    "name": "empty-array-principal",
    "description": "You must use the `Principal` or `NotPrincipal` element in the trust policies\nfor IAM roles and in resource-based policies. Resource-based policies are\npolicies that you embed directly in a resource.\n\nWhen you provide an empty array in a statement's `Principal` element, the\nstatement has no effect on the policy. AWS recommends that you specify the\nprincipals that should have access to the resource."
  },
  "suggestion_empty_array_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-array-resource",
    "name": "empty-array-resource",
    "description": "Statements must include either a `Resource` or a `NotResource` element.\n\nWhen you provide an empty array in a statement's resource element, the\nstatement has no effect on the policy. AWS recommends that you specify Amazon\nResource Names (ARNs) for resources."
  },
  "suggestion_empty_object_condition": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-object-condition",
    "name": "empty-object-condition",
    "description": "The `Condition` element structure requires that you use a condition operator\nand a key-value pair.\n\nWhen you provide an empty object in a statement's condition element, the\nstatement has no effect on the policy. Remove the optional element or specify\nconditions."
  },
  "suggestion_empty_object_principal": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-object-principal",
    "name": "empty-object-principal",
    "description": "You must use the `Principal` or `NotPrincipal` element in the trust policies\nfor IAM roles and in resource-based policies. Resource-based policies are\npolicies that you embed directly in a resource.\n\nWhen you provide an empty object in a statement's `Principal` element, the\nstatement has no effect on the policy. AWS recommends that you specify the\nprincipals that should have access to the resource."
  },
  "suggestion_empty_sid_value": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-empty-sid-value",
    "name": "empty-sid-value",
    "description": "The optional `Sid` (statement ID) element allows you to enter an identifier\nthat you provide for the policy statement. You can assign an `Sid` value to\neach statement in a statement array. If you choose to use the `Sid` element,\nyou must provide a string value.\n\n**Related terms**"
  },
  "suggestion_improve_ip_range": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-improve-ip-range",
    "name": "improve-ip-range",
    "description": "IP address conditions must be in the standard CIDR format, such as\n203.0.113.0/24 or 2001:DB8:1234:5678::/64. When you include non-zero bits\nafter the masked bits, they are not considered for the condition. AWS\nrecommends that you use the new address included in the message."
  },
  "suggestion_null_with_qualifier": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-null-with-qualifier",
    "name": "null-with-qualifier",
    "description": "In the\u00c2 `Condition`\u00c2 element, you build expressions in which you use\u00c2\ncondition operators like equal or less than to compare a condition in the\npolicy against keys and values in the request context. For requests that\ninclude multiple values for a single condition key, you must use the\u00c2\n`ForAllValues`\u00c2 or\u00c2 `ForAnyValue`\u00c2 set operators.\n\nWhen you use the `Null` condition operator with `ForAllValues`, the statement\nalways returns `true`. When you use the `Null` condition operator with\n`ForAnyValue`, the statement always returns `false`. AWS recommends that you\nuse the `StringLike` condition operator with these set operators.\n\n**Related terms**"
  },
  "suggestion_private_ip_address_subset": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-private-ip-address-subset",
    "name": "private-ip-address-subset",
    "description": "The global condition key `aws:SourceIp` works only for public IP address\nranges.\n\nWhen your `Condition` element includes a mix of private and public IP\naddresses, the statement might not have the desired effect. You can specify\nprivate IP addresses using `aws:VpcSourceIP`."
  },
  "suggestion_private_not_ip_address_subset": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-private-not-ip-address-subset",
    "name": "private-not-ip-address-subset",
    "description": "The global condition key `aws:SourceIp` works only for public IP address\nranges.\n\nWhen your `Condition` element includes the `NotIpAddress` condition operator\nand a mix of private and public IP addresses, the statement might not have the\ndesired effect. Every public IP addresses that is not specified in the policy\nwill match. No private IP addresses will match. To achieve this effect, you\ncan use `NotIpAddress` with `aws:VpcSourceIP` and specify the private IP\naddresses that should not match."
  },
  "suggestion_redundant_action": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-redundant-action",
    "name": "redundant-action",
    "description": "When you use wildcards (*) in the `Action` element, you can include redundant\npermissions. AWS recommends that you review your policy and include only the\npermissions that you need. This can help you remove redundant actions.\n\nFor example, the following actions include the `iam:GetCredentialReport`\naction twice.\n\n    \n    \n        \"Action\": [\n            \"iam:Get*\",\n            \"iam:List*\",\n            \"iam:GetCredentialReport\"\n        ],\n    \n\nIn this example, permissions are defined for every IAM action that begins with\n`Get` or `List`. When IAM adds additional get or list operations, this policy\nwill allow them. You might want to allow all of these read-only actions. The\n`iam:GetCredentialReport` action is already included as part of `iam:Get*`. To\nremove the duplicate permissions, you could remove `iam:GetCredentialReport`.\n\nYou receive a finding for this policy check when all of the contents of an\naction are redundant. In this example, if the element included\n`iam:*CredentialReport`, it is not considered redundant. That includes\n`iam:GetCredentialReport`, which is redundant, and\n`iam:GenerateCredentialReport`, which is not. Removing either `iam:Get*` or\n`iam:*CredentialReport` would change the policy's permissions."
  },
  "suggestion_redundant_condition_value_num": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-redundant-condition-value-num",
    "name": "redundant-condition-value-num",
    "description": "When you use numeric condition operators for similar values in a condition\nkey, you can create an overlap that results in redundant permissions.\n\nFor example, the following `Condition` element includes multiple\n`aws:MultiFactorAuthAge` conditions that have an age overlap of 1200 seconds.\n\n    \n    \n          \"Condition\": {\n            \"NumericLessThan\": {\n              \"aws:MultiFactorAuthAge\": [\n                \"2700\",\n                \"3600\"\n              ]\n            }\n          }\n    \n\nIn this example, the permissions are defined if multi-factor authentication\n(MFA) was completed less than 3600 seconds (1 hour) ago. You could remove the\nredundant `2700` value."
  },
  "suggestion_redundant_resource": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-redundant-resource",
    "name": "redundant-resource",
    "description": "When you use wildcards (*) in Amazon Resource Names (ARNs), you can create\nredundant resource permissions.\n\nFor example, the following `Resource` element includes multiple ARNs with\nredundant permissions.\n\n    \n    \n            \"Resource\": [\n                \"arn:aws:iam::111122223333:role/jane-admin\",\n                \"arn:aws:iam::111122223333:role/jane-s3only\",\n                \"arn:aws:iam::111122223333:role/jane*\"\n            ],\n    \n\nIn this example, the permissions are defined for any role with a name starting\nwith `jane`. You could remove the redundant `jane-admin` and `jane-s3only`\nARNs without changing the resulting permissions. This does make the policy\ndynamic. It will define permissions for any future roles that begin with\n`jane`. If the intention of the policy is to allow access to a static number\nof roles, then remove the last ARN and list only the ARNs that should be\ndefined."
  },
  "suggestion_redundant_statement": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-redundant-statement",
    "name": "redundant-statement",
    "description": "The `Statement` element is the main element for a policy. This element is\nrequired. The `Statement` element can contain a single statement or an array\nof individual statements.\n\nWhen you include the same statement more than once in a long policy, the\nstatements are is redundant. You can remove one of the statements without\naffecting the permissions granted by the policy. When someone edits a policy,\nthey might change one of the statements without updating the duplicate. This\nmight result in more permissions than intended."
  },
  "suggestion_wildcard_in_service_name": {
    "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-suggestion-wildcard-in-service-name",
    "name": "wildcard-in-service-name",
    "description": "When you include the name of an AWS service in a policy, AWS recommends that\nyou do not include wildcards (*, ?). This might add permissions for future\nservices that you do not intend. For example, there are more than a dozen AWS\nservices with the word `*code*` in their name.\n\n    \n    \n          \"Resource\": \"arn:aws:*code*::111122223333:*\""
  }
}